openapi: 3.0.3
info:
  title: Bank Argent API documentation
  description: |-
    This documentation contains all the endpoints of the Argent Bank API for the transaction part. 

    Some useful links:
    - [Backend API](https://github.com/OpenClassrooms-Student-Center/Project-10-Bank-API/tree/master)
    - [Frontend React App](https://github.com/MaeRiz/OC_P13_ArgentBank)
  termsOfService: http://swagger.io/terms/
  version: 1.0.0
servers:
  - url: https://localhost:3001/api/v1
tags:
  - name: Account
    description: Everything about banking accounts
  - name: Transaction
    description: Everything about transactions

paths:
  /account:
    get:
      tags:
        - Account
      summary: User's accounts
      description: Endpoint for fetching all user's accounts
      operationId: getUserAccounts
      parameters:
        - name: Bearer
          in: header
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Account"
        "500":
          description: Internal server error
      security:
        - Bearer: []
  /account/{AccId}:
    get:
      tags:
        - Account
      summary: Specific user's account
      description: Endpoint for fetching specific user's account
      operationId: getUserAccount
      parameters:
        - name: Bearer
          in: header
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
        - name: AccId
          in: path
          description: ID of account
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"

        "404":
          description: Not found
        "500":
          description: Internal server error
      security:
        - Bearer: []
  /account/{AccId}/transaction:
    get:
      tags:
        - Transaction
      summary: User's transactions
      description: Endpoint for fetching all user's transactions from account
      operationId: getUserTransactions
      parameters:
        - name: Bearer
          in: header
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
        - name: AccId
          in: path
          description: ID of account
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"

        "500":
          description: Internal server error
      security:
        - Bearer: []

  /account/{AccId}/transaction/{TransId}:
    get:
      tags:
        - Transaction
      summary: Specific user's transaction
      description: Endpoint for fetching specific transaction from account
      operationId: getUserTransaction
      parameters:
        - name: Bearer
          in: header
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
        - name: AccId
          in: path
          description: ID of account
          required: true
          schema:
            type: integer
            format: int64
        - name: TransId
          in: path
          description: ID of transaction
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        "404":
          description: Not found
        "500":
          description: Internal server error
      security:
        - Bearer: []
    put:
      tags:
        - Transaction
      summary: Update transaction
      description: Update specific transaction from user's account
      operationId: UpdateTransaction
      parameters:
        - name: Bearer
          in: header
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
        - name: AccId
          in: path
          description: ID of account
          required: true
          schema:
            type: integer
            format: int64
        - name: TransId
          in: path
          description: ID of transaction
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Update transaction
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  type: string
                  example: Restaurant
                notes:
                  type: string
                  example: My best experience ever
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        "405":
          description: Invalid input
      security:
        - Bearer: []

components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Savings
        balance:
          type: number
          example: 1000.00
    Transaction:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        accountId:
          type: integer
          format: int64
          example: 0
        description:
          type: string
          example: Golden sun Bakery
        amount:
          type: number
          example: 5
        balance:
          type: number
          example: 1000.00
        type:
          type: string
          example: Electronic
        category:
          type: string
          example: Food
        note:
          type: string
          example: Best food ever
        createdTime:
          type: string
          example: 20230620.09H20
        updatedTime:
          type: string
          example: 20230620.09H21

  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
